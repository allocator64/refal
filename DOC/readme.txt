
Этот файл содержит информацию о работе с РЕФАЛ-системой "REFGO".



 1. Введение
─────────────

РЕФАЛ - язык 'РЕкурсивных Функций АЛгоритмический'  -  язык программирования,
предназначенный для обработки символьной информации.  Данная реализация языка
описана в файле  'refal.txt'  и  отличается большим количеством ошибок и неу-
добств, последние, впрочем, я и попытался перебороть с помощью программы-обо-
лочки 'refgo'. Пользователь командной строки видит всю РЕФАЛ-систему исключи-
тельно как программу 'refgo.exe', которая сама вызывает компилятор, загрузчик
и создает и исполняет откомпилированную программу.  Если же Вы обладаете сис-
темой программирования Borland Pascal v.7.0,  то можете использовать все воз-
можности, предоставляемые его Турбо-средой.



 2. Программа-оболочка 'Refgo'
──────────────────────────────

Для работы программы необходимо только, чтобы нижеперечисленные файлы находи-
лись с ней в одной директории (прописывать ее в PATH необязательно, хотя и не
помешает).

  refgo   .exe  -  Программа-оболочка
  refal   .exe  -  Компилятор РЕФАЛа
  reflib  .lib  -  Стандартная библиотека (описана в файле 'reflib.txt')
  cl      .lib  -  Библиотека стыковки с языком C
  c0l     .obj  -  Модуль стыковки с языком C
  mainrf  .obj  -  Главный исполняющий модуль
  compfilt.exe  -  Фильтр выдачи компилятора
  ref2msg .exe  -  Транслятор сообщений об ошибках для Турбо-среды
  reflink .exe  -  Загрузчик Turbo Link v.2.0
  progfilt.exe  -  Фильтр выдачи программы

Программа вызывается с именем основного файла с расширением '.ref' в качестве
параметра. Она является также и препроцессором со следующими возможностями:

  а) Комментарием является часть строки после знака '*' вне апострофов,  либо
     произвольная часть текста в фигурных скобках.

  б) Ограничение компилятора на длину строки снимается (исключения составляют
     случаи,  когда  компилятор  откровенно глючит на разрезанных строках, но
     это уже не моя вина).

  в) Несколько  программных  строк  могут быть физически расположены на одной
     строке, при том, что они разделены знаком ';'.

  г) Программа может содержать директиву  #include "filename" - ее смысл сос-
     тоит в включении указанного (возможно, с путем) файла. Эти директивы мо-
     гут  появляться в любом месте файла и быть вложенными,  т.е.  включаемый
     файл может снова содержать такие директивы.

При  запуске  програмы имеется возможность указать некоторые опции, подсказку
по которым можно получить, запустив 'refgo.exe' без параметров:

  /?  (help)    Вывод этой информации
  /r  (souRce)  Запись результата препроцессора в filename.src
  /c  (no Cut)  Не выполнять перенос длинных строк препроцессором
  /e  (Exe)     Откомпилировать программу в filename.exe и не запускать ее
  /f  (Filter)  Выполнять фильтрацию выдачи откомпилированной программы:
    /d  (no Dump)  Не показывать содержимое копилки и поля зрения при останове
    /l  (Long)     Не выполнять перенос длинных строк в выдаче программы
    /h  (no Halt)  Не выводить сообщения об останове программы
    /s  (Syntax)   Заменить "k/FUNC/ arg." на "< FUNC arg >"
    /p  (Pure)     Отключить вообще все посторонние сообщения (= /d /h /l)

Часть параметров относятся не собственно к 'refgo',  а к фильтру выдачи прог-
раммы - 'progfilt.exe'. Это вполне самостоятельная программа, которая исполь-
зуется для улучшения читабельности выдачи откомпилированной программы и может
вызываться вручную при запуске созданного с помощью опции /e файла, например:

  myref.exe | progfilt /p /s

В заключение отмечу,  что при работе программы  на различных этапах создаются
временные файлы в директории с исходными текстами, которые, разумеется, затем
удаляются. Но в случае возникновения аппаратного или иного сбоя возможно, что
они не будут удалены. Следует обратить внимание лишь на то,  что текст основ-
ной программы может оказаться в файле  '$$$.ref',  а в 'filename.ref'  вместо
него будет находиться результат обработки препроцессором. В таком случае сле-
дует этот файл переименовать обратно.



 3. Работа в Турбо-среде
─────────────────────────

В  данную  систему  входит  еще одно средство, позволяющее работать со средой
Borland Pascal v.7.0.  При этом если настроить среду описанным ниже способом,
то достаточно будет для запуска РЕФАЛ-программы нажать Shift+F9, а результаты
ее работы видеть в никуда не прокручивающемся в отличие от консоли окне реда-
ктора. Более того, возникающие сообщения об ошибках позволят  "нажатием мыши"
подсветить  или перейти к месту ошибки в нужном исходном файле.  Единственное
ограничение на использование Турбо-среды (вернее, всех ее преимуществ) состо-
ит в невозможности использовать в программе стандартный ввод  (функцию Card),
если ее вывод перенаправляется в окно.  Кроме этого для нормальной работы не-
обходимо, чтобы директория с основным исходным файлом была текущей. При запу-
ске нижеперечисленных инструментов не надо сохранять редактируемые файлы - за
это отвечает директива $SAVE ALL.

Далее описан процесс настройки Турбо-среды:

  1) Рекомендуется в меню Options -> Environment -> Colors в группе Syntax
     установить, к примеру, следующие цвета:

       Comments  - темно-зеленый;
       Symbols   - ярко-белый;
       Strings   - ярко-голубой;
       Остальное - ярко-зеленый.

  2) В меню Options -> Environment -> Editor в строку Highlight extensions
     добавить ;*.REF

  3) В меню Options -> Tools сделать New и ввести следующее:

       Title:        Refal in Window
       Program path: полный путь к refgo.exe, например, \REFAL\refgo.exe
       Command line: $NOSWAP $SAVE ALL $EDNAME /f /p /s $CAP MSG(полный путь
                     к файлу ref2msg.exe) $CAP EDIT
       Hot keys:     Shifh+F9

     Здесь  вместо  $EDNAME  можно подставить конкретное имя РЕФАЛ-программы,
     иначе  придется  перед ее запуском переходить в ее окно (вместо $EDNAME
     Паскаль подставит имя файла в текущем окне).

  4) Можно аналогично создать еще один Tool:

       Title:        Refal in Dos Screen
       Program path: полный путь к refgo.exe, например, \REFAL\refgo.exe
       Command line: $SAVE ALL $EDNAME /f /p /s
       Hot Keys:     Shift+F8

     Этот инструмент нужно использовать,  если  программа  использует  ввод с
     клавиатуры с помощью функции Card.  Напомню, что нажав Alt+F5, можно бу-
     дет посмотреть ее выдачу.



 4. Информация об авторах
──────────────────────────

Автор программы (Я) Шевченко Михаил (кафедра АЯ) желает Вам  успешной работы.
К  нему  присоединяются:  Проскурня Максим  (кафедра АЯ),  написавший  фильтр
progfilt.exe, и Зленко Павел (кафедра АСВК),  помогавший при настройке Турбо-
-среды.

Мои координаты: кафедра АЯ, научный руководитель Головин Игорь Геннадьевич.

А все мы учимся на факультете вычислительной математики и кибернетики Москов-
ского  ордена Трудового красного знамени  Государственного Университета имени
Михаила Васильевича Ломоносова (ВМиК МГУ). Вот.
