/*#define turbo*/
/*#define VAX*/
/*#define PDP*/
#define IBM_PC
/*#define mdebug*/
/*#define debug*/
#define TAGO 0
#define TAGF 2
#define TAGN 4
#define TAGR 6
#define TAGLB 1
#define TAGRB 3
#define TAGK  5
#define TAGD  7
struct  linkcb_
 {struct  linkcb_ *prev;
  struct  linkcb_ *next;
  unsigned  short tag;
  union {
     char infoc;
     long  coden;           
     struct linkcb_ *codep;
     char *codef;
  } info;
};
typedef struct linkcb_ linkcb;
struct  st_ { 
   struct st_ *stprev;
   struct st_ *stnext;
   int state;
   linkcb *dot;
   long step;
   long stop;
   linkcb *view;
   linkcb *store;
};
typedef  struct  st_ st;
struct  refal_ {
   st *crprev;
   st *crnext;
   int upshot;
   linkcb *preva;
   linkcb *nexta;
   linkcb *prevr;
   linkcb *nextr;
   st *currst;
   linkcb *flhead;
   linkcb *svar;
   linkcb *dvar;
   int stmnmb;
   int nostm;
   int tmmode;
   int tmintv;
};
typedef struct refal_ REFAL;
#define TRUE  1
#define FALSE 0
#define LARGE
#ifdef VAX
  #define Z2 
  #define Z3 '0','0','0', 
  #define Z4 '0','0', 
  #define Z5 '0', 
  #define Z6 
  #define Z7 '0','0','0',
  #define G_L_B globaldef
  #define VOID void
  #define Wbin "w+"
  #define Rbin "r+"
  typedef unsigned char unchar;
  typedef struct __ptr__
   { char *_ptr_;
   } POINTER;
  #define LBLL sizeof(POINTER)
  #define SMBL (sizeof(int) + sizeof(long))   
#endif
#ifdef PDP
  #define Z2 
  #define Z3 '0', 
  #define Z4  
  #define Z5 '0', 
  #define Z6 
  #define Z7 '0',
  #define G_L_B
  #define VOID char
  #define Wbin "wn"
  #define Rbin "rn"
  typedef char unchar;
  typedef struct __ptr__
   { char *_ptr_;
   } POINTER;
  #define LBLL sizeof(POINTER)
  #define SMBL (sizeof(int) + sizeof(long))   
#endif
#ifdef IBM_PC
  #define Z2 
  #define Z3
  #define Z4
  #define Z5
  #define Z6
  #define Z7
  #define G_L_B
  #define VIDEO
  #define VOID void
  #define Wbin "wb"
  #define Rbin "rb"
  #define gcoden(p)    p->info.coden
  #define pcoden(p,W)  p->info.coden = W;
  typedef unsigned char unchar;
  typedef struct __ptr__
   { char *_ptr_;
   } POINTER;
  #define LBLL sizeof(POINTER)
  #define SMBL (sizeof(int) + sizeof(long))   
#endif
